{"version":3,"file":"session-manager.js","sourceRoot":"","sources":["../../src/session-manager.ts"],"names":[],"mappings":";;;AACA,6CAA+D;AAE/D;IAIE,wBAAoB,OAA6B,EAAE,MAAc;QAA7C,YAAO,GAAP,OAAO,CAAsB;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAA,2BAAa,EAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;IACjC,CAAC;IAED;;;;;;OAMG;IACG,6BAAI,GAAV;;;;;;;wBACE,KAAA,IAAI,CAAA;wBAAU,qBAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAA;;wBAArD,GAAK,KAAK,GAAG,MAAA,CAAC,SAAuC,CAAC,mCAAI;4BACxD,MAAM,EAAE,KAAK;yBACd,CAAC;wBACF,sBAAO,IAAI,EAAC;;;;KACb;IAED,mCAAU,GAAV,UAAW,OAA6B;QACtC,IAAI,CAAC,KAAK,yCAAQ,IAAI,CAAC,KAAK,GAAK,OAAO,CAAE,CAAC;QAC3C,KAAK,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,qCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC9B,CAAC;IAED,qCAAY,GAAZ,UAAa,SAAiB;QAC5B,IAAI,CAAC,UAAU,CAAC,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;IACjC,CAAC;IAED,oCAAW,GAAX;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7B,CAAC;IAED,oCAAW,GAAX,UAAY,QAAgB;QAC1B,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,kCAAS,GAAT;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B,CAAC;IAED,kCAAS,GAAT,UAAU,MAAc;QACtB,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,yCAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;IAClC,CAAC;IAED,yCAAgB,GAAhB,UAAiB,aAAqB;QACpC,IAAI,CAAC,UAAU,CAAC,EAAE,aAAa,eAAA,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,kCAAS,GAAT;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B,CAAC;IAED,kCAAS,GAAT,UAAU,MAAe;QACvB,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,uCAAc,GAAd;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;IAChC,CAAC;IAED,uCAAc,GAAd,UAAe,WAAmB;QAChC,IAAI,CAAC,UAAU,CAAC,EAAE,WAAW,aAAA,EAAE,CAAC,CAAC;IACnC,CAAC;IACH,qBAAC;AAAD,CAAC,AA3ED,IA2EC;AA3EY,wCAAc","sourcesContent":["import { UserSession, Storage, SessionManager as ISessionManager } from '@amplitude/analytics-types';\nimport { getCookieName as getStorageKey } from './cookie-name';\n\nexport class SessionManager implements ISessionManager {\n  storageKey: string;\n  cache: UserSession;\n\n  constructor(private storage: Storage<UserSession>, apiKey: string) {\n    this.storageKey = getStorageKey(apiKey);\n    this.cache = { optOut: false };\n  }\n\n  /**\n   * load() must be called immediately after instantation\n   *\n   * ```ts\n   * await new SessionManager(...).load();\n   * ```\n   */\n  async load() {\n    this.cache = (await this.storage.get(this.storageKey)) ?? {\n      optOut: false,\n    };\n    return this;\n  }\n\n  setSession(session: Partial<UserSession>) {\n    this.cache = { ...this.cache, ...session };\n    void this.storage.set(this.storageKey, this.cache);\n  }\n\n  getSessionId() {\n    return this.cache.sessionId;\n  }\n\n  setSessionId(sessionId: number) {\n    this.setSession({ sessionId });\n  }\n\n  getDeviceId(): string | undefined {\n    return this.cache.deviceId;\n  }\n\n  setDeviceId(deviceId: string): void {\n    this.setSession({ deviceId });\n  }\n\n  getUserId(): string | undefined {\n    return this.cache.userId;\n  }\n\n  setUserId(userId: string): void {\n    this.setSession({ userId });\n  }\n\n  getLastEventTime() {\n    return this.cache.lastEventTime;\n  }\n\n  setLastEventTime(lastEventTime: number) {\n    this.setSession({ lastEventTime });\n  }\n\n  getOptOut(): boolean {\n    return this.cache.optOut;\n  }\n\n  setOptOut(optOut: boolean): void {\n    this.setSession({ optOut });\n  }\n\n  getLastEventId(): number | undefined {\n    return this.cache.lastEventId;\n  }\n\n  setLastEventId(lastEventId: number) {\n    this.setSession({ lastEventId });\n  }\n}\n"]}